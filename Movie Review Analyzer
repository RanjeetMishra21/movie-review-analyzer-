<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Movie Review Sentiment Analyzer</title>
    <style>
        body {
    font-family: Arial, sans-serif;
    margin: 20px;
    padding: 0;
    background-color: #f7f7f7;
}

.container {
    max-width: 600px;
    margin: 50px auto;
    padding: 20px;
    background: #fff;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
}

h1 {
    text-align: center;
    color: #333;
}

textarea {
    width: 100%;
    height: 100px;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
}

button {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    color: #fff;
    background-color: #007BFF;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

.result {
    margin-top: 20px;
    font-size: 18px;
    color: #333;
    text-align: center;
}

    </style>
</head>
<body>
    <div class="container">
        <h1>Movie Review Sentiment Analyzer</h1>
        <textarea id="reviewInput" placeholder="Enter your movie review here..."></textarea>
        <button onclick="analyzeSentiment()">Analyze Sentiment</button>
        <div id="result" class="result"></div>
    </div>
    <script>
        async function analyzeSentiment() {
    const reviewInput = document.getElementById("reviewInput").value;
    const resultDiv = document.getElementById("result");

    if (!reviewInput.trim()) {
        resultDiv.innerHTML = "<p style='color: red;'>Please enter a valid review.</p>";
        return;
    }

    resultDiv.innerHTML = "Analyzing sentiment...";

    try {
        // Fetch sentiment analysis from Hugging Face API
        const response = await fetch("https://api-inference.huggingface.co/models/distilbert-base-uncased-finetuned-sst-2-english", {
            method: "POST",
            headers: {
                "Authorization": "Bearer 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",
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ inputs: reviewInput }),
        });

        if (!response.ok) {
            const errorText = await response.text();
            console.error("API Error:", errorText);
            throw new Error("Failed to analyze sentiment.");
        }

        const data = await response.json();
        console.log("API Response:", data); // Log full response for debugging

        // Check for the correct structure in the response
        if (Array.isArray(data) && data.length > 0 && Array.isArray(data[0]) && data[0].length > 0) {
            const sentimentData = data[0][0]; // Access the first element in the nested array
            const sentiment = sentimentData.label || "Unknown";
            const confidence = sentimentData.score ? sentimentData.score.toFixed(2) : "0.00";

            resultDiv.innerHTML = `
                <p>Sentiment: <strong>${sentiment}</strong></p>
                <p>Confidence: <strong>${confidence}</strong></p>
            `;
        } else {
            throw new Error("Unexpected response structure.");
        }
    } catch (error) {
        console.error(error);
        resultDiv.innerHTML = "<p style='color: red;'>An error occurred while analyzing the sentiment.</p>";
    }
}

    </script>
</body>
</html>
